// src/commands/transcrever.ts
import { Context, Telegraf } from "telegraf";
import { transcribeAudio } from "../services/NOTwhisper";

export function registerTranscreverCommand(bot: Telegraf) {
  bot.command("transcrever", async (ctx: Context) => {
    try {
      // For칞a o tipo de ctx.message para any para acessar reply_to_message
      const msg = ctx.message as any;
      let voice;
      if (msg.reply_to_message && msg.reply_to_message.voice) {
        voice = msg.reply_to_message.voice;
      } else if (msg.voice) {
        voice = msg.voice;
      }

      if (!voice || !voice.file_id) {
        await ctx.reply(
          "Por favor, responda a uma mensagem de voz para transcrever."
        );
        return;
      }

      const fileLink = await ctx.telegram.getFileLink(voice.file_id);
      console.log("Link do 치udio:", fileLink.toString());

      const transcription = await transcribeAudio(fileLink.toString());
      console.log("Transcri칞칚o:", transcription);

      await ctx.reply(`Transcri칞칚o:\n${transcription}`);
    } catch (error) {
      console.error("Erro ao transcrever 치udio:", error);
      await ctx.reply("Ocorreu um erro ao transcrever o 치udio.");
    }
  });
}

export const transcreverCommand = {
  register: registerTranscreverCommand,
  name: () => "/transcrever",
  help: () =>
    "Responda a uma mensagem de voz com o comando `/transcrever` para obter a transcri칞칚o do 치udio.",
  description: () => "游댉 Transcrever 치udio usando o Whisper.",
};
